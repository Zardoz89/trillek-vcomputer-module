// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: computer_state.proto

#ifndef PROTOBUF_computer_5fstate_2eproto__INCLUDED
#define PROTOBUF_computer_5fstate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "device_state.pb.h"
// @@protoc_insertion_point(includes)

namespace trillek {
namespace computer {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_computer_5fstate_2eproto();
void protobuf_AssignDesc_computer_5fstate_2eproto();
void protobuf_ShutdownFile_computer_5fstate_2eproto();

class DeviceSlot;
class ComputerState;

// ===================================================================

class DeviceSlot : public ::google::protobuf::MessageLite {
 public:
  DeviceSlot();
  virtual ~DeviceSlot();

  DeviceSlot(const DeviceSlot& from);

  inline DeviceSlot& operator=(const DeviceSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeviceSlot& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeviceSlot* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeviceSlot* other);

  // implements Message ----------------------------------------------

  DeviceSlot* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeviceSlot& from);
  void MergeFrom(const DeviceSlot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // required .trillek.computer.DeviceState device = 2;
  inline bool has_device() const;
  inline void clear_device();
  static const int kDeviceFieldNumber = 2;
  inline const ::trillek::computer::DeviceState& device() const;
  inline ::trillek::computer::DeviceState* mutable_device();
  inline ::trillek::computer::DeviceState* release_device();
  inline void set_allocated_device(::trillek::computer::DeviceState* device);

  // @@protoc_insertion_point(class_scope:trillek.computer.DeviceSlot)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_device();
  inline void clear_has_device();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::trillek::computer::DeviceState* device_;
  ::google::protobuf::uint32 slot_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_computer_5fstate_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_computer_5fstate_2eproto();
  #endif
  friend void protobuf_AssignDesc_computer_5fstate_2eproto();
  friend void protobuf_ShutdownFile_computer_5fstate_2eproto();

  void InitAsDefaultInstance();
  static DeviceSlot* default_instance_;
};
// -------------------------------------------------------------------

class ComputerState : public ::google::protobuf::MessageLite {
 public:
  ComputerState();
  virtual ~ComputerState();

  ComputerState(const ComputerState& from);

  inline ComputerState& operator=(const ComputerState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ComputerState& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ComputerState* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ComputerState* other);

  // implements Message ----------------------------------------------

  ComputerState* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ComputerState& from);
  void MergeFrom(const ComputerState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_on = 1;
  inline bool has_is_on() const;
  inline void clear_is_on();
  static const int kIsOnFieldNumber = 1;
  inline bool is_on() const;
  inline void set_is_on(bool value);

  // required uint32 ram_size = 2;
  inline bool has_ram_size() const;
  inline void clear_ram_size();
  static const int kRamSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 ram_size() const;
  inline void set_ram_size(::google::protobuf::uint32 value);

  // optional uint32 rom_size = 3;
  inline bool has_rom_size() const;
  inline void clear_rom_size();
  static const int kRomSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 rom_size() const;
  inline void set_rom_size(::google::protobuf::uint32 value);

  // repeated .trillek.computer.DeviceSlot devices = 10;
  inline int devices_size() const;
  inline void clear_devices();
  static const int kDevicesFieldNumber = 10;
  inline const ::trillek::computer::DeviceSlot& devices(int index) const;
  inline ::trillek::computer::DeviceSlot* mutable_devices(int index);
  inline ::trillek::computer::DeviceSlot* add_devices();
  inline const ::google::protobuf::RepeatedPtrField< ::trillek::computer::DeviceSlot >&
      devices() const;
  inline ::google::protobuf::RepeatedPtrField< ::trillek::computer::DeviceSlot >*
      mutable_devices();

  // @@protoc_insertion_point(class_scope:trillek.computer.ComputerState)
 private:
  inline void set_has_is_on();
  inline void clear_has_is_on();
  inline void set_has_ram_size();
  inline void clear_has_ram_size();
  inline void set_has_rom_size();
  inline void clear_has_rom_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_on_;
  ::google::protobuf::uint32 ram_size_;
  ::google::protobuf::RepeatedPtrField< ::trillek::computer::DeviceSlot > devices_;
  ::google::protobuf::uint32 rom_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_computer_5fstate_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_computer_5fstate_2eproto();
  #endif
  friend void protobuf_AssignDesc_computer_5fstate_2eproto();
  friend void protobuf_ShutdownFile_computer_5fstate_2eproto();

  void InitAsDefaultInstance();
  static ComputerState* default_instance_;
};
// ===================================================================


// ===================================================================

// DeviceSlot

// required uint32 slot = 1;
inline bool DeviceSlot::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceSlot::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceSlot::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceSlot::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 DeviceSlot::slot() const {
  // @@protoc_insertion_point(field_get:trillek.computer.DeviceSlot.slot)
  return slot_;
}
inline void DeviceSlot::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:trillek.computer.DeviceSlot.slot)
}

// required .trillek.computer.DeviceState device = 2;
inline bool DeviceSlot::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceSlot::set_has_device() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceSlot::clear_has_device() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceSlot::clear_device() {
  if (device_ != NULL) device_->::trillek::computer::DeviceState::Clear();
  clear_has_device();
}
inline const ::trillek::computer::DeviceState& DeviceSlot::device() const {
  // @@protoc_insertion_point(field_get:trillek.computer.DeviceSlot.device)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return device_ != NULL ? *device_ : *default_instance().device_;
#else
  return device_ != NULL ? *device_ : *default_instance_->device_;
#endif
}
inline ::trillek::computer::DeviceState* DeviceSlot::mutable_device() {
  set_has_device();
  if (device_ == NULL) device_ = new ::trillek::computer::DeviceState;
  // @@protoc_insertion_point(field_mutable:trillek.computer.DeviceSlot.device)
  return device_;
}
inline ::trillek::computer::DeviceState* DeviceSlot::release_device() {
  clear_has_device();
  ::trillek::computer::DeviceState* temp = device_;
  device_ = NULL;
  return temp;
}
inline void DeviceSlot::set_allocated_device(::trillek::computer::DeviceState* device) {
  delete device_;
  device_ = device;
  if (device) {
    set_has_device();
  } else {
    clear_has_device();
  }
  // @@protoc_insertion_point(field_set_allocated:trillek.computer.DeviceSlot.device)
}

// -------------------------------------------------------------------

// ComputerState

// optional bool is_on = 1;
inline bool ComputerState::has_is_on() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComputerState::set_has_is_on() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComputerState::clear_has_is_on() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComputerState::clear_is_on() {
  is_on_ = false;
  clear_has_is_on();
}
inline bool ComputerState::is_on() const {
  // @@protoc_insertion_point(field_get:trillek.computer.ComputerState.is_on)
  return is_on_;
}
inline void ComputerState::set_is_on(bool value) {
  set_has_is_on();
  is_on_ = value;
  // @@protoc_insertion_point(field_set:trillek.computer.ComputerState.is_on)
}

// required uint32 ram_size = 2;
inline bool ComputerState::has_ram_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComputerState::set_has_ram_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComputerState::clear_has_ram_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComputerState::clear_ram_size() {
  ram_size_ = 0u;
  clear_has_ram_size();
}
inline ::google::protobuf::uint32 ComputerState::ram_size() const {
  // @@protoc_insertion_point(field_get:trillek.computer.ComputerState.ram_size)
  return ram_size_;
}
inline void ComputerState::set_ram_size(::google::protobuf::uint32 value) {
  set_has_ram_size();
  ram_size_ = value;
  // @@protoc_insertion_point(field_set:trillek.computer.ComputerState.ram_size)
}

// optional uint32 rom_size = 3;
inline bool ComputerState::has_rom_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComputerState::set_has_rom_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComputerState::clear_has_rom_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComputerState::clear_rom_size() {
  rom_size_ = 0u;
  clear_has_rom_size();
}
inline ::google::protobuf::uint32 ComputerState::rom_size() const {
  // @@protoc_insertion_point(field_get:trillek.computer.ComputerState.rom_size)
  return rom_size_;
}
inline void ComputerState::set_rom_size(::google::protobuf::uint32 value) {
  set_has_rom_size();
  rom_size_ = value;
  // @@protoc_insertion_point(field_set:trillek.computer.ComputerState.rom_size)
}

// repeated .trillek.computer.DeviceSlot devices = 10;
inline int ComputerState::devices_size() const {
  return devices_.size();
}
inline void ComputerState::clear_devices() {
  devices_.Clear();
}
inline const ::trillek::computer::DeviceSlot& ComputerState::devices(int index) const {
  // @@protoc_insertion_point(field_get:trillek.computer.ComputerState.devices)
  return devices_.Get(index);
}
inline ::trillek::computer::DeviceSlot* ComputerState::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:trillek.computer.ComputerState.devices)
  return devices_.Mutable(index);
}
inline ::trillek::computer::DeviceSlot* ComputerState::add_devices() {
  // @@protoc_insertion_point(field_add:trillek.computer.ComputerState.devices)
  return devices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::trillek::computer::DeviceSlot >&
ComputerState::devices() const {
  // @@protoc_insertion_point(field_list:trillek.computer.ComputerState.devices)
  return devices_;
}
inline ::google::protobuf::RepeatedPtrField< ::trillek::computer::DeviceSlot >*
ComputerState::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:trillek.computer.ComputerState.devices)
  return &devices_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace computer
}  // namespace trillek

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_computer_5fstate_2eproto__INCLUDED
